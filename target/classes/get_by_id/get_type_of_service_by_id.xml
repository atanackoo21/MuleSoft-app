<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
	<flow name="get_type_of_services_by_idFlow">
		<set-variable variableName="id" value="#[flowVars.type_of_service_id]" doc:name="Variable"/>
		<db:select config-ref="MySQL_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[Select type_of_service_id, name, description, type_of_service.actual, price, service.service_id, service.service_name
from type_of_service inner join service on (type_of_service.service_id = service.service_id) 
where type_of_service_id = #[flowVars.id]]]></db:parameterized-query>
		</db:select>
		<choice doc:name="Choice">
			<when expression="#[payload.size() == 0]">
				<set-property propertyName="http.status" value="400" doc:name="Property"/>
				<set-payload value="#['Not found!']" doc:name="Set Payload"/>
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message" metadata:id="b26c4fed-6eb6-46cf-84f5-9e03e376e0bd">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload, indexOfPayload)->{
	type_of_service_id: payload.type_of_service_id,
	actual: payload.actual as :boolean,
	description: payload.description as :string,
	name: payload.name as :string,
	price: payload.price as :string,
	service: {
		service_id: payload.service_id,
		service_name: payload.service_name as :string
	}
})]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>
</mule>
